;; note: mod key is cmd + ctrl (CT/QW)
;; note: all the keys are in QWERTY because karabiner uses the hardware key
{
	:devices {
		:macbook-keyboard [{:vendor_id 1452 :product_id 641}]
	}
	:applications {:vscode ["^com\\.microsoft\\.VSCode$"]}
	:main, [
		{:des "Configure modifier keys on macbook keyboard" :rules [
			;; left cmd -> left mod (left cmd + left ctrl)
			[:##left_command :!Tleft_command :macbook-keyboard]
			;; right cmd -> right mod (right cmd + right ctrl)
			[:##right_command :!Wright_command :macbook-keyboard]

			;; left ctrl -> left cmd
			[:##left_control :left_command :macbook-keyboard]
			;; right ctrl -> right cmd
			[:##right_control :right_command :macbook-keyboard]

			;; fn -> left ctrl
			{
				:from {:apple_vendor_top_case_key_code :keyboard_fn}
				:to [{:key_code :left_control}]
				:conditions [{
					:identifiers [{:vendor_id 1452 :product_id 641}]
					:type :device_if
				}]
				:type :basic
			}

			;; left arrow -> right cmd
			[:##left_arrow :right_command :macbook-keyboard]

			;; up arrow -> right ctrl
			;; down arrow -> right ctrl
			[:##up_arrow :right_control :macbook-keyboard]
			[:##down_arrow :right_control :macbook-keyboard]


			;; right arrow -> fn
			{
				:from {:key_code :right_arrow}
				:to [{:apple_vendor_top_case_key_code :keyboard_fn}]
				:conditions [{
					:identifiers [{:vendor_id 1452 :product_id 641}]
					:type :device_if
				}]
				:type :basic
			}

			;; fn + esdf -> arrow keys
			[:!F##e :up_arrow :macbook-keyboard]
			[:!F##s :left_arrow :macbook-keyboard]
			[:!F##d :down_arrow :macbook-keyboard]
			[:!F##f :right_arrow :macbook-keyboard]
		]}
		{:des "Swap caps lock to backspace on macbook keyboard" :rules [
			[:##caps_lock :delete_or_backspace :macbook-keyboard]
			[:##delete_or_backspace :caps_lock :macbook-keyboard]
		]}
		{:des "Remap cmd + tab to ctrl + tab in VSCode" :rules [
			[:!Ctab :vk_none]
			[:!Qtab :vk_none]
			[:!CStab :vk_none]
			[:!CRtab :vk_none]
			[:!QStab :vk_none]
			[:!QRtab :vk_none]
		]}
		{:des, "Yabai keybinds", :rules [
			;; mod + j: focus down
			[:!CT#QWc "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/focus-down-window.js > /dev/null"]
			[:!QW#CTc "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/focus-down-window.js > /dev/null"]
			;; mod + k: focus up
			[:!CT#QWv "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/focus-up-window.js > /dev/null"]
			[:!QW#CTv "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/focus-up-window.js > /dev/null"]
			;; mod + m: focus on master
			[:!CT#QWm "/usr/local/bin/yabai -m window --focus east"]
			[:!QW#CTm "/usr/local/bin/yabai -m window --focus east"]
			;; mod + shift + m: move window to master
			[:!CTS#QWRm "/usr/local/bin/yabai -m window --swap east"]
			[:!QWR#CTSm "/usr/local/bin/yabai -m window --swap east"]
			;; mod + shift + i: increase number of master windows
			[:!CTS#QWRg "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/increase-master-window-count.js > /dev/null"]
			[:!QWR#CTSg "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/increase-master-window-count.js > /dev/null"]
			;; mod + shift + d: decrease number of master windows
			[:!CTS#QWRh "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/decrease-master-window-count.js > /dev/null"]
			[:!QWR#CTSh "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/decrease-master-window-count.js > /dev/null"]
			;; mod + shift + j: move window down
			[:!CTS#QWRc "/usr/local/bin/yabai -m window --swap next || /usr/local/bin/yabai -m window --swap first"]
			[:!QWR#CTSc "/usr/local/bin/yabai -m window --swap next || /usr/local/bin/yabai -m window --swap first"]
			;; mod + shift + k: move window up
			[:!CTS#QWRv "/usr/local/bin/yabai -m window --swap prev || /usr/local/bin/yabai -m window --swap last"]
			[:!QWR#CTSv "/usr/local/bin/yabai -m window --swap prev || /usr/local/bin/yabai -m window --swap last"]
			;; mod + h: resize window left
			[:!CT#QWj "/usr/local/bin/yabai -m window --resize right:-50:0; /usr/local/bin/yabai -m window --resize left:-50:0"]
			[:!QW#CTj "/usr/local/bin/yabai -m window --resize right:-50:0; /usr/local/bin/yabai -m window --resize left:-50:0"]
			;; mod + l: resize window right
			[:!CT#QWp "/usr/local/bin/yabai -m window --resize right:50:0; /usr/local/bin/yabai -m window --resize left:50:0"]
			[:!QW#CTp "/usr/local/bin/yabai -m window --resize right:50:0; /usr/local/bin/yabai -m window --resize left:50:0"]
			;; mod + alt + k: resize window top
			[:!CTS#QWRp "/usr/local/bin/yabai -m window --resize top:0:-50; /usr/local/bin/yabai -m window --resize bottom:0:-50"]
			[:!QWR#CTSp "/usr/local/bin/yabai -m window --resize top:0:-50; /usr/local/bin/yabai -m window --resize bottom:0:-50"]
			;; mod + alt + j: resize window bottom
			[:!CTS#QWRj "/usr/local/bin/yabai -m window --resize bottom:0:50; /usr/local/bin/yabai -m window --resize top:0:50"]
			[:!QWR#CTSj "/usr/local/bin/yabai -m window --resize bottom:0:50; /usr/local/bin/yabai -m window --resize top:0:50"]
			;; mod + shift + q: close focused window
			[:!CTS#QWRx "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/close-focused-window.js > /dev/null"]
			[:!QWR#CTSx "/usr/local/bin/node ~/code/yabai-master-stack-plugin/dist/fns/close-focused-window.js > /dev/null"]
			;; mod + period: switch to next display
			[:!CT#QWe "/usr/local/bin/yabai -m display --focus next || /usr/local/bin/yabai -m display --focus first"]
			[:!QW#CTe "/usr/local/bin/yabai -m display --focus next || /usr/local/bin/yabai -m display --focus first"]
			;; mod + shift + period: move window to next display
			[:!CTS#QWRe "/usr/local/bin/yabai -m window --display next || /usr/local/bin/yabai -m window --display first"]
			[:!QWR#CTSe "/usr/local/bin/yabai -m window --display next || /usr/local/bin/yabai -m window --display first"]
			;; mod + comma: switch to previous display
			[:!CT#QWw "/usr/local/bin/yabai -m display --focus prev || /usr/local/bin/yabai -m display --focus last"]
			[:!QW#CTw "/usr/local/bin/yabai -m display --focus prev || /usr/local/bin/yabai -m display --focus last"]
			;; mod + shift + comma: move window to previous display
			[:!CTS#QWRw "/usr/local/bin/yabai -m window --display prev || /usr/local/bin/yabai -m window --display last"]
			[:!QWR#CTSw "/usr/local/bin/yabai -m window --display prev || /usr/local/bin/yabai -m window --display last"]
			;; mod + <number>: switch to space number <number>
			[:!CT#QW9 "/usr/local/bin/yabai -m space --focus next"]
			[:!QW#CT9 "/usr/local/bin/yabai -m space --focus next"]
			[:!CT#QWquote "/usr/local/bin/yabai -m space --focus prev"]
			[:!QW#CTquote "/usr/local/bin/yabai -m space --focus prev"]

			;; applications

			;; mod + b: open firefox (browser)
			[:!CT#QWn "open -na /Applications/Firefox.app"]
			[:!QW#CTn "open -na /Applications/Firefox.app"]
												;; mod + q: open qutebrowser
			[:!CT#QWx "open -na /Applications/qutebrowser.app"]
			[:!QW#CTx "open -na /Applications/qutebrowser.app"]
												;; mod + f: open finder
			[:!CT#QWy "open /Users/leonzalion"]
			[:!QW#CTy "open /Users/leonzalion"]
			;; mod + n: open notion
			[:!CT#QWl "open /Applications/Notion.app"]
			[:!QW#CTl "open /Applications/Notion.app"]
			;; mod + p open bitwarden (password manager)
			[:!CT#QWr "open -na /Applications/Bitwarden.app"]
			[:!QW#CTr "open -na /Applications/Bitwarden.app"]
			;; mod + return: open alacritty
			[:!CT#QWreturn_or_enter "open -na /Applications/Alacritty.app"]
			[:!QW#CTreturn_or_enter "open -na /Applications/Alacritty.app"]
		]}
		{:des "F23-24 to mod key", :rules [
			[:##f23, :!Tleft_command]
			[:##f24, :!Wright_command]
		]}
	]
}
